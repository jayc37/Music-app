#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Levitate.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Music")]
	public partial class MusicDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertALBUM(ALBUM instance);
    partial void UpdateALBUM(ALBUM instance);
    partial void DeleteALBUM(ALBUM instance);
    partial void InsertTUA(TUA instance);
    partial void UpdateTUA(TUA instance);
    partial void DeleteTUA(TUA instance);
    partial void InsertBAIHAT(BAIHAT instance);
    partial void UpdateBAIHAT(BAIHAT instance);
    partial void DeleteBAIHAT(BAIHAT instance);
    partial void InsertCASI(CASI instance);
    partial void UpdateCASI(CASI instance);
    partial void DeleteCASI(CASI instance);
    partial void InsertCHITIETBAIHAT(CHITIETBAIHAT instance);
    partial void UpdateCHITIETBAIHAT(CHITIETBAIHAT instance);
    partial void DeleteCHITIETBAIHAT(CHITIETBAIHAT instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    #endregion
		
		public MusicDBDataContext() : 
				base(global::Levitate.Properties.Settings.Default.MusicConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ALBUM> ALBUMs
		{
			get
			{
				return this.GetTable<ALBUM>();
			}
		}
		
		public System.Data.Linq.Table<TUA> TUAs
		{
			get
			{
				return this.GetTable<TUA>();
			}
		}
		
		public System.Data.Linq.Table<BAIHAT> BAIHATs
		{
			get
			{
				return this.GetTable<BAIHAT>();
			}
		}
		
		public System.Data.Linq.Table<CASI> CASIs
		{
			get
			{
				return this.GetTable<CASI>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETBAIHAT> CHITIETBAIHATs
		{
			get
			{
				return this.GetTable<CHITIETBAIHAT>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ALBUMS")]
	public partial class ALBUM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_Album;
		
		private string _Ten_Album;
		
		private EntitySet<BAIHAT> _BAIHATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_AlbumChanging(string value);
    partial void OnMa_AlbumChanged();
    partial void OnTen_AlbumChanging(string value);
    partial void OnTen_AlbumChanged();
    #endregion
		
		public ALBUM()
		{
			this._BAIHATs = new EntitySet<BAIHAT>(new Action<BAIHAT>(this.attach_BAIHATs), new Action<BAIHAT>(this.detach_BAIHATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Album", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_Album
		{
			get
			{
				return this._Ma_Album;
			}
			set
			{
				if ((this._Ma_Album != value))
				{
					this.OnMa_AlbumChanging(value);
					this.SendPropertyChanging();
					this._Ma_Album = value;
					this.SendPropertyChanged("Ma_Album");
					this.OnMa_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_Album", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Ten_Album
		{
			get
			{
				return this._Ten_Album;
			}
			set
			{
				if ((this._Ten_Album != value))
				{
					this.OnTen_AlbumChanging(value);
					this.SendPropertyChanging();
					this._Ten_Album = value;
					this.SendPropertyChanged("Ten_Album");
					this.OnTen_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALBUM_BAIHAT", Storage="_BAIHATs", ThisKey="Ma_Album", OtherKey="Ma_Album")]
		public EntitySet<BAIHAT> BAIHATs
		{
			get
			{
				return this._BAIHATs;
			}
			set
			{
				this._BAIHATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.ALBUM = this;
		}
		
		private void detach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.ALBUM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUA")]
	public partial class TUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_Tua;
		
		private string _Ten_Tua;
		
		private EntitySet<BAIHAT> _BAIHATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_TuaChanging(string value);
    partial void OnMa_TuaChanged();
    partial void OnTen_TuaChanging(string value);
    partial void OnTen_TuaChanged();
    #endregion
		
		public TUA()
		{
			this._BAIHATs = new EntitySet<BAIHAT>(new Action<BAIHAT>(this.attach_BAIHATs), new Action<BAIHAT>(this.detach_BAIHATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Tua", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_Tua
		{
			get
			{
				return this._Ma_Tua;
			}
			set
			{
				if ((this._Ma_Tua != value))
				{
					this.OnMa_TuaChanging(value);
					this.SendPropertyChanging();
					this._Ma_Tua = value;
					this.SendPropertyChanged("Ma_Tua");
					this.OnMa_TuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_Tua", DbType="NVarChar(MAX)")]
		public string Ten_Tua
		{
			get
			{
				return this._Ten_Tua;
			}
			set
			{
				if ((this._Ten_Tua != value))
				{
					this.OnTen_TuaChanging(value);
					this.SendPropertyChanging();
					this._Ten_Tua = value;
					this.SendPropertyChanged("Ten_Tua");
					this.OnTen_TuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUA_BAIHAT", Storage="_BAIHATs", ThisKey="Ma_Tua", OtherKey="Ma_Tua")]
		public EntitySet<BAIHAT> BAIHATs
		{
			get
			{
				return this._BAIHATs;
			}
			set
			{
				this._BAIHATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.TUA = this;
		}
		
		private void detach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.TUA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAIHAT")]
	public partial class BAIHAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_BaiHat;
		
		private string _Ma_Tua;
		
		private string _Ma_CaSi;
		
		private string _Ma_Album;
		
		private string _Ma_TheLoai;
		
		private string _Ma_CaSiAlbum;
		
		private string _DuongDan;
		
		private EntityRef<CHITIETBAIHAT> _CHITIETBAIHAT;
		
		private EntityRef<ALBUM> _ALBUM;
		
		private EntityRef<TUA> _TUA;
		
		private EntityRef<CASI> _CASI;
		
		private EntityRef<CASI> _CASI1;
		
		private EntityRef<THELOAI> _THELOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_BaiHatChanging(string value);
    partial void OnMa_BaiHatChanged();
    partial void OnMa_TuaChanging(string value);
    partial void OnMa_TuaChanged();
    partial void OnMa_CaSiChanging(string value);
    partial void OnMa_CaSiChanged();
    partial void OnMa_AlbumChanging(string value);
    partial void OnMa_AlbumChanged();
    partial void OnMa_TheLoaiChanging(string value);
    partial void OnMa_TheLoaiChanged();
    partial void OnMa_CaSiAlbumChanging(string value);
    partial void OnMa_CaSiAlbumChanged();
    partial void OnDuongDanChanging(string value);
    partial void OnDuongDanChanged();
    #endregion
		
		public BAIHAT()
		{
			this._CHITIETBAIHAT = default(EntityRef<CHITIETBAIHAT>);
			this._ALBUM = default(EntityRef<ALBUM>);
			this._TUA = default(EntityRef<TUA>);
			this._CASI = default(EntityRef<CASI>);
			this._CASI1 = default(EntityRef<CASI>);
			this._THELOAI = default(EntityRef<THELOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_BaiHat", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_BaiHat
		{
			get
			{
				return this._Ma_BaiHat;
			}
			set
			{
				if ((this._Ma_BaiHat != value))
				{
					this.OnMa_BaiHatChanging(value);
					this.SendPropertyChanging();
					this._Ma_BaiHat = value;
					this.SendPropertyChanged("Ma_BaiHat");
					this.OnMa_BaiHatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Tua", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ma_Tua
		{
			get
			{
				return this._Ma_Tua;
			}
			set
			{
				if ((this._Ma_Tua != value))
				{
					if (this._TUA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_TuaChanging(value);
					this.SendPropertyChanging();
					this._Ma_Tua = value;
					this.SendPropertyChanged("Ma_Tua");
					this.OnMa_TuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CaSi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ma_CaSi
		{
			get
			{
				return this._Ma_CaSi;
			}
			set
			{
				if ((this._Ma_CaSi != value))
				{
					if (this._CASI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_CaSiChanging(value);
					this.SendPropertyChanging();
					this._Ma_CaSi = value;
					this.SendPropertyChanged("Ma_CaSi");
					this.OnMa_CaSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_Album", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ma_Album
		{
			get
			{
				return this._Ma_Album;
			}
			set
			{
				if ((this._Ma_Album != value))
				{
					if (this._ALBUM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_AlbumChanging(value);
					this.SendPropertyChanging();
					this._Ma_Album = value;
					this.SendPropertyChanged("Ma_Album");
					this.OnMa_AlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_TheLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ma_TheLoai
		{
			get
			{
				return this._Ma_TheLoai;
			}
			set
			{
				if ((this._Ma_TheLoai != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_TheLoaiChanging(value);
					this.SendPropertyChanging();
					this._Ma_TheLoai = value;
					this.SendPropertyChanged("Ma_TheLoai");
					this.OnMa_TheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CaSiAlbum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ma_CaSiAlbum
		{
			get
			{
				return this._Ma_CaSiAlbum;
			}
			set
			{
				if ((this._Ma_CaSiAlbum != value))
				{
					if (this._CASI1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_CaSiAlbumChanging(value);
					this.SendPropertyChanging();
					this._Ma_CaSiAlbum = value;
					this.SendPropertyChanged("Ma_CaSiAlbum");
					this.OnMa_CaSiAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuongDan", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DuongDan
		{
			get
			{
				return this._DuongDan;
			}
			set
			{
				if ((this._DuongDan != value))
				{
					this.OnDuongDanChanging(value);
					this.SendPropertyChanging();
					this._DuongDan = value;
					this.SendPropertyChanged("DuongDan");
					this.OnDuongDanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHAT_CHITIETBAIHAT", Storage="_CHITIETBAIHAT", ThisKey="Ma_BaiHat", OtherKey="Ma_BaiHat", IsUnique=true, IsForeignKey=false)]
		public CHITIETBAIHAT CHITIETBAIHAT
		{
			get
			{
				return this._CHITIETBAIHAT.Entity;
			}
			set
			{
				CHITIETBAIHAT previousValue = this._CHITIETBAIHAT.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETBAIHAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETBAIHAT.Entity = null;
						previousValue.BAIHAT = null;
					}
					this._CHITIETBAIHAT.Entity = value;
					if ((value != null))
					{
						value.BAIHAT = this;
					}
					this.SendPropertyChanged("CHITIETBAIHAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALBUM_BAIHAT", Storage="_ALBUM", ThisKey="Ma_Album", OtherKey="Ma_Album", IsForeignKey=true)]
		public ALBUM ALBUM
		{
			get
			{
				return this._ALBUM.Entity;
			}
			set
			{
				ALBUM previousValue = this._ALBUM.Entity;
				if (((previousValue != value) 
							|| (this._ALBUM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ALBUM.Entity = null;
						previousValue.BAIHATs.Remove(this);
					}
					this._ALBUM.Entity = value;
					if ((value != null))
					{
						value.BAIHATs.Add(this);
						this._Ma_Album = value.Ma_Album;
					}
					else
					{
						this._Ma_Album = default(string);
					}
					this.SendPropertyChanged("ALBUM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUA_BAIHAT", Storage="_TUA", ThisKey="Ma_Tua", OtherKey="Ma_Tua", IsForeignKey=true)]
		public TUA TUA
		{
			get
			{
				return this._TUA.Entity;
			}
			set
			{
				TUA previousValue = this._TUA.Entity;
				if (((previousValue != value) 
							|| (this._TUA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TUA.Entity = null;
						previousValue.BAIHATs.Remove(this);
					}
					this._TUA.Entity = value;
					if ((value != null))
					{
						value.BAIHATs.Add(this);
						this._Ma_Tua = value.Ma_Tua;
					}
					else
					{
						this._Ma_Tua = default(string);
					}
					this.SendPropertyChanged("TUA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASI_BAIHAT", Storage="_CASI", ThisKey="Ma_CaSi", OtherKey="Ma_CaSi", IsForeignKey=true)]
		public CASI CASI
		{
			get
			{
				return this._CASI.Entity;
			}
			set
			{
				CASI previousValue = this._CASI.Entity;
				if (((previousValue != value) 
							|| (this._CASI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASI.Entity = null;
						previousValue.BAIHATs.Remove(this);
					}
					this._CASI.Entity = value;
					if ((value != null))
					{
						value.BAIHATs.Add(this);
						this._Ma_CaSi = value.Ma_CaSi;
					}
					else
					{
						this._Ma_CaSi = default(string);
					}
					this.SendPropertyChanged("CASI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASI_BAIHAT1", Storage="_CASI1", ThisKey="Ma_CaSiAlbum", OtherKey="Ma_CaSi", IsForeignKey=true)]
		public CASI CASI1
		{
			get
			{
				return this._CASI1.Entity;
			}
			set
			{
				CASI previousValue = this._CASI1.Entity;
				if (((previousValue != value) 
							|| (this._CASI1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASI1.Entity = null;
						previousValue.BAIHATs1.Remove(this);
					}
					this._CASI1.Entity = value;
					if ((value != null))
					{
						value.BAIHATs1.Add(this);
						this._Ma_CaSiAlbum = value.Ma_CaSi;
					}
					else
					{
						this._Ma_CaSiAlbum = default(string);
					}
					this.SendPropertyChanged("CASI1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_BAIHAT", Storage="_THELOAI", ThisKey="Ma_TheLoai", OtherKey="Ma_TheLoai", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.BAIHATs.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.BAIHATs.Add(this);
						this._Ma_TheLoai = value.Ma_TheLoai;
					}
					else
					{
						this._Ma_TheLoai = default(string);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CASI")]
	public partial class CASI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_CaSi;
		
		private string _Ten_CaSi;
		
		private EntitySet<BAIHAT> _BAIHATs;
		
		private EntitySet<BAIHAT> _BAIHATs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_CaSiChanging(string value);
    partial void OnMa_CaSiChanged();
    partial void OnTen_CaSiChanging(string value);
    partial void OnTen_CaSiChanged();
    #endregion
		
		public CASI()
		{
			this._BAIHATs = new EntitySet<BAIHAT>(new Action<BAIHAT>(this.attach_BAIHATs), new Action<BAIHAT>(this.detach_BAIHATs));
			this._BAIHATs1 = new EntitySet<BAIHAT>(new Action<BAIHAT>(this.attach_BAIHATs1), new Action<BAIHAT>(this.detach_BAIHATs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_CaSi", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_CaSi
		{
			get
			{
				return this._Ma_CaSi;
			}
			set
			{
				if ((this._Ma_CaSi != value))
				{
					this.OnMa_CaSiChanging(value);
					this.SendPropertyChanging();
					this._Ma_CaSi = value;
					this.SendPropertyChanged("Ma_CaSi");
					this.OnMa_CaSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_CaSi", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Ten_CaSi
		{
			get
			{
				return this._Ten_CaSi;
			}
			set
			{
				if ((this._Ten_CaSi != value))
				{
					this.OnTen_CaSiChanging(value);
					this.SendPropertyChanging();
					this._Ten_CaSi = value;
					this.SendPropertyChanged("Ten_CaSi");
					this.OnTen_CaSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASI_BAIHAT", Storage="_BAIHATs", ThisKey="Ma_CaSi", OtherKey="Ma_CaSi")]
		public EntitySet<BAIHAT> BAIHATs
		{
			get
			{
				return this._BAIHATs;
			}
			set
			{
				this._BAIHATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASI_BAIHAT1", Storage="_BAIHATs1", ThisKey="Ma_CaSi", OtherKey="Ma_CaSiAlbum")]
		public EntitySet<BAIHAT> BAIHATs1
		{
			get
			{
				return this._BAIHATs1;
			}
			set
			{
				this._BAIHATs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.CASI = this;
		}
		
		private void detach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.CASI = null;
		}
		
		private void attach_BAIHATs1(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.CASI1 = this;
		}
		
		private void detach_BAIHATs1(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.CASI1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETBAIHAT")]
	public partial class CHITIETBAIHAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_BaiHat;
		
		private System.TimeSpan _ThoiLuong;
		
		private bool _Rating;
		
		private int _SoLanNghe;
		
		private bool _CoAnhBia;
		
		private System.DateTime _NgayThemVaoCSDL;
		
		private System.Nullable<System.DateTime> _LanNgheCuoi;
		
		private string _NamPhatHanh;
		
		private EntityRef<BAIHAT> _BAIHAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_BaiHatChanging(string value);
    partial void OnMa_BaiHatChanged();
    partial void OnThoiLuongChanging(System.TimeSpan value);
    partial void OnThoiLuongChanged();
    partial void OnRatingChanging(bool value);
    partial void OnRatingChanged();
    partial void OnSoLanNgheChanging(int value);
    partial void OnSoLanNgheChanged();
    partial void OnCoAnhBiaChanging(bool value);
    partial void OnCoAnhBiaChanged();
    partial void OnNgayThemVaoCSDLChanging(System.DateTime value);
    partial void OnNgayThemVaoCSDLChanged();
    partial void OnLanNgheCuoiChanging(System.Nullable<System.DateTime> value);
    partial void OnLanNgheCuoiChanged();
    partial void OnNamPhatHanhChanging(string value);
    partial void OnNamPhatHanhChanged();
    #endregion
		
		public CHITIETBAIHAT()
		{
			this._BAIHAT = default(EntityRef<BAIHAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_BaiHat", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_BaiHat
		{
			get
			{
				return this._Ma_BaiHat;
			}
			set
			{
				if ((this._Ma_BaiHat != value))
				{
					if (this._BAIHAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMa_BaiHatChanging(value);
					this.SendPropertyChanging();
					this._Ma_BaiHat = value;
					this.SendPropertyChanged("Ma_BaiHat");
					this.OnMa_BaiHatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="Time NOT NULL")]
		public System.TimeSpan ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Bit NOT NULL")]
		public bool Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanNghe", DbType="Int NOT NULL")]
		public int SoLanNghe
		{
			get
			{
				return this._SoLanNghe;
			}
			set
			{
				if ((this._SoLanNghe != value))
				{
					this.OnSoLanNgheChanging(value);
					this.SendPropertyChanging();
					this._SoLanNghe = value;
					this.SendPropertyChanged("SoLanNghe");
					this.OnSoLanNgheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoAnhBia", DbType="Bit NOT NULL")]
		public bool CoAnhBia
		{
			get
			{
				return this._CoAnhBia;
			}
			set
			{
				if ((this._CoAnhBia != value))
				{
					this.OnCoAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._CoAnhBia = value;
					this.SendPropertyChanged("CoAnhBia");
					this.OnCoAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThemVaoCSDL", DbType="DateTime NOT NULL")]
		public System.DateTime NgayThemVaoCSDL
		{
			get
			{
				return this._NgayThemVaoCSDL;
			}
			set
			{
				if ((this._NgayThemVaoCSDL != value))
				{
					this.OnNgayThemVaoCSDLChanging(value);
					this.SendPropertyChanging();
					this._NgayThemVaoCSDL = value;
					this.SendPropertyChanged("NgayThemVaoCSDL");
					this.OnNgayThemVaoCSDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanNgheCuoi", DbType="DateTime")]
		public System.Nullable<System.DateTime> LanNgheCuoi
		{
			get
			{
				return this._LanNgheCuoi;
			}
			set
			{
				if ((this._LanNgheCuoi != value))
				{
					this.OnLanNgheCuoiChanging(value);
					this.SendPropertyChanging();
					this._LanNgheCuoi = value;
					this.SendPropertyChanged("LanNgheCuoi");
					this.OnLanNgheCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamPhatHanh", DbType="Char(4)")]
		public string NamPhatHanh
		{
			get
			{
				return this._NamPhatHanh;
			}
			set
			{
				if ((this._NamPhatHanh != value))
				{
					this.OnNamPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._NamPhatHanh = value;
					this.SendPropertyChanged("NamPhatHanh");
					this.OnNamPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAIHAT_CHITIETBAIHAT", Storage="_BAIHAT", ThisKey="Ma_BaiHat", OtherKey="Ma_BaiHat", IsForeignKey=true)]
		public BAIHAT BAIHAT
		{
			get
			{
				return this._BAIHAT.Entity;
			}
			set
			{
				BAIHAT previousValue = this._BAIHAT.Entity;
				if (((previousValue != value) 
							|| (this._BAIHAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAIHAT.Entity = null;
						previousValue.CHITIETBAIHAT = null;
					}
					this._BAIHAT.Entity = value;
					if ((value != null))
					{
						value.CHITIETBAIHAT = this;
						this._Ma_BaiHat = value.Ma_BaiHat;
					}
					else
					{
						this._Ma_BaiHat = default(string);
					}
					this.SendPropertyChanged("BAIHAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ma_TheLoai;
		
		private string _Ten_TheLoai;
		
		private EntitySet<BAIHAT> _BAIHATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMa_TheLoaiChanging(string value);
    partial void OnMa_TheLoaiChanged();
    partial void OnTen_TheLoaiChanging(string value);
    partial void OnTen_TheLoaiChanged();
    #endregion
		
		public THELOAI()
		{
			this._BAIHATs = new EntitySet<BAIHAT>(new Action<BAIHAT>(this.attach_BAIHATs), new Action<BAIHAT>(this.detach_BAIHATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma_TheLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ma_TheLoai
		{
			get
			{
				return this._Ma_TheLoai;
			}
			set
			{
				if ((this._Ma_TheLoai != value))
				{
					this.OnMa_TheLoaiChanging(value);
					this.SendPropertyChanging();
					this._Ma_TheLoai = value;
					this.SendPropertyChanged("Ma_TheLoai");
					this.OnMa_TheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_TheLoai", DbType="NVarChar(50)")]
		public string Ten_TheLoai
		{
			get
			{
				return this._Ten_TheLoai;
			}
			set
			{
				if ((this._Ten_TheLoai != value))
				{
					this.OnTen_TheLoaiChanging(value);
					this.SendPropertyChanging();
					this._Ten_TheLoai = value;
					this.SendPropertyChanged("Ten_TheLoai");
					this.OnTen_TheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_BAIHAT", Storage="_BAIHATs", ThisKey="Ma_TheLoai", OtherKey="Ma_TheLoai")]
		public EntitySet<BAIHAT> BAIHATs
		{
			get
			{
				return this._BAIHATs;
			}
			set
			{
				this._BAIHATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_BAIHATs(BAIHAT entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
}
#pragma warning restore 1591
